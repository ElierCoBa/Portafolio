using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;


namespace GestorDeSorteosEnLinea.Business
{
    public class GestorDeOperaciones
    {
        

        public void AgregarUsuario(GestorDeSorteosEnLinea.Model.AspNetUsers elUsuario)
        {
            GestorDeSorteosEnLinea.DataAccess.Operaciones lasOperaciones;
            lasOperaciones = new DataAccess.Operaciones();
            lasOperaciones.AgregarUsuario(elUsuario);

        }

       
        public void EditarUnSorteoConRestriccion(GestorDeSorteosEnLinea.Model.SorteosRestricciones elSorteoConRestriccionAEditar)
        {
            GestorDeSorteosEnLinea.DataAccess.Operaciones lasOperaciones;
            lasOperaciones = new DataAccess.Operaciones();
            lasOperaciones.EditarUnSorteoConRestriccion(elSorteoConRestriccionAEditar);

        }

        public GestorDeSorteosEnLinea.Model.Sorteos ConsultarUnSorteo(int Id)
        {
            GestorDeSorteosEnLinea.DataAccess.Operaciones lasOperaciones;
            lasOperaciones = new DataAccess.Operaciones();

            return lasOperaciones.ConsultarUnSorteo(Id);

        }

        public GestorDeSorteosEnLinea.Model.SorteosRestricciones ConsultarUnSorteoConRestriccion(int Id)
        {
            GestorDeSorteosEnLinea.DataAccess.Operaciones lasOperaciones;
            lasOperaciones = new DataAccess.Operaciones();

            return lasOperaciones.ConsultarUnSorteoConRestriccion(Id);

        }
        public GestorDeSorteosEnLinea.Model.SorteosDetalleVentas ConsultarUnDetalle(int Id)
        {
            GestorDeSorteosEnLinea.DataAccess.Operaciones lasOperaciones;
            lasOperaciones = new DataAccess.Operaciones();

            return lasOperaciones.ConsultarUnDetalle(Id);

        }
        public void AgregarSorteos(GestorDeSorteosEnLinea.Model.Sorteos elSorteo)
        {
            GestorDeSorteosEnLinea.DataAccess.Operaciones lasOperaciones;
            lasOperaciones = new DataAccess.Operaciones();
            lasOperaciones.AgregarSorteo(elSorteo);

        }
        public List<GestorDeSorteosEnLinea.Model.Sorteos> ListarSorteos()
        {
            GestorDeSorteosEnLinea.DataAccess.Operaciones lasOperaciones;
            lasOperaciones = new DataAccess.Operaciones();

            return lasOperaciones.ListarSorteos();

        }
        public List<GestorDeSorteosEnLinea.Model.SorteosHistorico> ListarSorteosHistoricos(int Id)
        {
            GestorDeSorteosEnLinea.DataAccess.Operaciones lasOperaciones;
            lasOperaciones = new DataAccess.Operaciones();

            return lasOperaciones.ListarSorteosHistoricos(Id);

        }
     
        public List<GestorDeSorteosEnLinea.Model.Sorteos> ListarSorteosActivos()
        {
            GestorDeSorteosEnLinea.DataAccess.Operaciones lasOperaciones;
            lasOperaciones = new DataAccess.Operaciones();

            return lasOperaciones.ListarSorteosActivos();

        }
    
        public List<GestorDeSorteosEnLinea.Model.Sorteos> ListarSorteosActivosVigentes()
        {
           

            GestorDeSorteosEnLinea.DataAccess.Operaciones lasOperaciones;
            lasOperaciones = new DataAccess.Operaciones();

           

            return lasOperaciones.ListarSorteosActivosVigentes();

        }

        public GestorDeSorteosEnLinea.Model.SorteosHistorico ConsultarUnSorteoHistorico(int Id)
        {
            GestorDeSorteosEnLinea.DataAccess.Operaciones lasOperaciones;
            lasOperaciones = new DataAccess.Operaciones();
  
            return lasOperaciones.ConsultarUnSorteoHistorico(Id);

        }
        public void AgregarSorteosHistoricos(GestorDeSorteosEnLinea.Model.SorteosHistorico elSorteoHistorico, int IdSorteo)
        {
            GestorDeSorteosEnLinea.DataAccess.Operaciones lasOperaciones;
            lasOperaciones = new DataAccess.Operaciones();
            elSorteoHistorico.IdSorteo = IdSorteo;
            elSorteoHistorico.FechaDeModificacion = DateTime.Now;
            elSorteoHistorico.DescripcionDeLaModificacion = "Registro de sorteo";
            elSorteoHistorico.Id_AspNetUser = "CoBa";
            lasOperaciones.AgregarSorteoHistorico(elSorteoHistorico);


        }
      
        public void ActivarUnSorteo(GestorDeSorteosEnLinea.Model.Sorteos elSorteo, GestorDeSorteosEnLinea.Model.SorteosHistorico elSorteoHistorico, string laDescripcionDeLaModificacion)
        {
            GestorDeSorteosEnLinea.DataAccess.Operaciones lasOperaciones;
            lasOperaciones = new DataAccess.Operaciones();

            elSorteo.Estado = Model.Estados.Activo;
            elSorteoHistorico.DescripcionDeLaModificacion = laDescripcionDeLaModificacion;
            elSorteoHistorico.FechaDeModificacion = DateTime.Now;
            elSorteoHistorico.Id = 0;
            elSorteoHistorico.Id_AspNetUser = "CoBa";
            elSorteoHistorico.IdSorteo = elSorteo.Id;
            lasOperaciones.CambiarDeEstadoUnSorteo(elSorteo,elSorteoHistorico);

        }
        public void InactivarUnSorteo(GestorDeSorteosEnLinea.Model.Sorteos elSorteo, GestorDeSorteosEnLinea.Model.SorteosHistorico elSorteoHistorico, string laDescripcionDeLaModificacion)
        {
            GestorDeSorteosEnLinea.DataAccess.Operaciones lasOperaciones;
            lasOperaciones = new DataAccess.Operaciones();

            elSorteo.Estado = Model.Estados.Inactivo;
            elSorteoHistorico.DescripcionDeLaModificacion = laDescripcionDeLaModificacion;
            elSorteoHistorico.FechaDeModificacion = DateTime.Now;
            elSorteoHistorico.Id = 0;
            elSorteoHistorico.Id_AspNetUser = "E12";
            elSorteoHistorico.IdSorteo = elSorteo.Id;
            lasOperaciones.CambiarDeEstadoUnSorteo(elSorteo, elSorteoHistorico);

        }

   
        public void AgregarDetalleVenta(GestorDeSorteosEnLinea.Model.SorteosDetalleVentas elDetalleDeLaVenta, int elNumeroComprado, decimal elMontoDelNumeroComprado)
        {
            GestorDeSorteosEnLinea.DataAccess.Operaciones lasOperaciones;
            lasOperaciones = new DataAccess.Operaciones();
            elDetalleDeLaVenta.Id = 0;
            elDetalleDeLaVenta.Monto = elMontoDelNumeroComprado;
            elDetalleDeLaVenta.Numero = elNumeroComprado;
            elDetalleDeLaVenta.Id_AspNetUser = "E12";

            lasOperaciones.AgregarDetalleVenta(elDetalleDeLaVenta);

        }
        public List<GestorDeSorteosEnLinea.Model.SorteosDetalleVentas> ListarSorteosDeUsuario()
        {
            GestorDeSorteosEnLinea.DataAccess.Operaciones lasOperaciones;
            lasOperaciones = new DataAccess.Operaciones();

            return lasOperaciones.ListarSorteoDeUsuario();

        }
        public GestorDeSorteosEnLinea.Model.SorteosDetalleVentas ConsultarUnSorteoDeUsuario(int Id)
        {
            GestorDeSorteosEnLinea.DataAccess.Operaciones lasOperaciones;
            lasOperaciones = new DataAccess.Operaciones();

            return lasOperaciones.ConsultarUnSorteoDeUsuario(Id);

        }

        public void AgregarSorteosRestricciones(GestorDeSorteosEnLinea.Model.SorteosRestricciones elSorteoconRestriccion)
        {

            GestorDeSorteosEnLinea.Model.SorteosRestricciones elNuevoSorteConRestricciones;
            elNuevoSorteConRestricciones = new GestorDeSorteosEnLinea.Model.SorteosRestricciones();

            elNuevoSorteConRestricciones.MontoMaximo = elSorteoconRestriccion.MontoMaximo;
            elNuevoSorteConRestricciones.Numero = elSorteoconRestriccion.Numero;
            elNuevoSorteConRestricciones.IdSorteos = elSorteoconRestriccion.Id;
            
            GestorDeSorteosEnLinea.DataAccess.Operaciones  lasOperaciones;
            lasOperaciones = new GestorDeSorteosEnLinea.DataAccess.Operaciones();

            lasOperaciones.AgregarSorteosRestricciones(elNuevoSorteConRestricciones);

        }

        public int ObtenerElId(List<Model.SorteosDetalleVentas> laListaDeDetalles, Model.SorteosDetalleVentas elDetalleDelSorteo)
        {
            string elDetalleObtenido = "";
            int elIdObtenido = 0;

            foreach (var elDetalle in laListaDeDetalles)
            {

                elDetalleObtenido = elDetalleDelSorteo.Id_AspNetUser;


                if (elDetalleObtenido == "E12")
                {
                    elIdObtenido = elDetalleDelSorteo.IdSorteos;
                    break;
                }
            }
            return elIdObtenido;

        }
    }
}
