using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;

namespace GestorDeSorteosEnLinea.Controllers
{
    public class CompraDeNumerosController : Controller
    {

        public ActionResult Index()
        {

           ServicioDeCompraDeNumeros.ServicioDeCompraDeNumerosClient elClienteDeServicioDeCompraDeNumeros = new ServicioDeCompraDeNumeros.ServicioDeCompraDeNumerosClient();
           var laListaDeSorteos = elClienteDeServicioDeCompraDeNumeros.ListarSorteosActivosVigentes();
           return View(laListaDeSorteos);
        }

        public ActionResult SeleccionarUnSorteo(int id)
        {
            ServicioDeCompraDeNumeros.ServicioDeCompraDeNumerosClient elClienteDeServicioDeCompraDeNumeros = new ServicioDeCompraDeNumeros.ServicioDeCompraDeNumerosClient();
            var elSorteoConsultado = elClienteDeServicioDeCompraDeNumeros.ConsultarUnSorteo(id);

            ViewBag.Fecha = elSorteoConsultado.Fecha.ToString("dd/MM/yyyy");
            ViewBag.Indicador = true;
           

            return View(elSorteoConsultado);
        }
        [HttpPost]
        public ActionResult SeleccionarUnSorteo(GestorDeSorteosEnLinea.Model.Sorteos elSorteo, GestorDeSorteosEnLinea.Model.SorteosDetalleVentas elDetalleDeLaVenta)
        {
            try
            {


                int elNumeroComprado = 0;
                Decimal elMontoDelNumeroComprado = 0;
                DateTime? laFechaDelSorteo;
                int elIdDelSorteo = elSorteo.Id;
                ServicioDeCompraDeNumeros.ServicioDeCompraDeNumerosClient elClienteDeServicioDeCompraDeNumeros = new ServicioDeCompraDeNumeros.ServicioDeCompraDeNumerosClient();
                ServicioDeSorteos.ServicioDeSorteosClient elClienteDeSorteos = new ServicioDeSorteos.ServicioDeSorteosClient();

                elMontoDelNumeroComprado = int.Parse(Request.Form["elMontoDelNumeroComprado"]);
                elNumeroComprado = int.Parse(Request.Form["elNumeroComprado"]);

                if (elClienteDeServicioDeCompraDeNumeros.PoseeRestriccionElSorteoSeleccionado(elNumeroComprado, elIdDelSorteo) == null)
                {
                    
                    laFechaDelSorteo = elClienteDeSorteos.ConsultarUnSorteo(elIdDelSorteo).Fecha;
                    elClienteDeServicioDeCompraDeNumeros.AgregarDetalleVenta(elDetalleDeLaVenta, elNumeroComprado, elMontoDelNumeroComprado, elIdDelSorteo, laFechaDelSorteo);

                    return RedirectToAction("Index");
                }
                else {

                    ServicioDeSorteosRestricciones.ServiciosDeSorteosRestriccionesClient elClienteDeServicioDeSorteosRestricciones = new ServicioDeSorteosRestricciones.ServiciosDeSorteosRestriccionesClient();

                    var laRestriccionDelSorteo = elClienteDeServicioDeSorteosRestricciones.ConsultarUnSorteosConRestricciones(elSorteo.Id);

                    Decimal MontoRestriccionAcumulado = elClienteDeServicioDeCompraDeNumeros.ConsultarMontoAcumuladoRestriccion(elNumeroComprado, elSorteo.Id);

                    if (MontoRestriccionAcumulado + elMontoDelNumeroComprado <= laRestriccionDelSorteo.MontoMaximo)
                    {
                        laFechaDelSorteo = elClienteDeSorteos.ConsultarUnSorteo(elIdDelSorteo).Fecha;
                        elClienteDeServicioDeCompraDeNumeros.AgregarDetalleVenta(elDetalleDeLaVenta, elNumeroComprado, elMontoDelNumeroComprado, elIdDelSorteo, laFechaDelSorteo);

                        return RedirectToAction("Index");
                    }
                    else {
                        
                        ViewBag.Indicador = false;
                        ViewBag.MontoAconsejadoDeCompra = laRestriccionDelSorteo.MontoMaximo - MontoRestriccionAcumulado;
                        @ViewBag.Numero = laRestriccionDelSorteo.Numero;

                        return View();
                    }


                }


              


                



                return View();

              
            }
            catch
            {

                return View();
            }
        }

    }
}
